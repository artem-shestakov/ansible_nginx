user {{ nginx_user }};
worker_processes auto;
pid /run/nginx.pid;

# Load dynamic modules.
{% if install_from == "source" -%}
{% for module in nginx_dynamic_modules -%}
{% if "--with-"+module.name+"=dynamic" in nginx_with_modules|replace(" ","") %}
load_module {{ nginx_modules_path }}/{{ module.module_file }};
{% endif -%}
{% endfor -%}
{% else -%}
{% if ansible_facts['os_family'] == "Debian" -%}
include /etc/nginx/modules-enabled/*.conf;
{% else -%}
include /usr/share/nginx/modules/*.conf;
{% endif -%}
{% endif %}


error_log  /var/log/nginx/error.log warn;

events {
    worker_connections  {{ wkr_conn }};
}


http {
    # Additional params from `nginx_http_add`
    {% for param in nginx_http_add|default([], true) %}
    {{ param }}
    {% endfor %}
    # end `nginx_http_add` params

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    server_names_hash_bucket_size  128;

    include /etc/nginx/conf.d/*.conf;
}

stream {
    # Additional params from `nginx_stream_add`
    {% for param in nginx_stream_add|default([], true) -%}
    {{ param }}
    {% endfor -%}
    # end `nginx_stream_add` params

    include /etc/nginx/stream-conf.d/*.conf;
}